TESTS FOR 2-matrix_divided.py
================================
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2], [2, 4], [6, 98]]

>>> matrix_divided(matrix, 4)
[[0.25, 0.5], [0.5, 1.0], [1.5, 24.5]]

>>> matrix_divided(matrix, -5)
[[-0.2, -0.4], [-0.4, -0.8], [-1.2, -19.6]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([[2.7, 4], ['6', 8.4], [10.1, '12'], [5.3, '10.2', 15.8]], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix, "hola")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided((1, 3), 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2.7, 4], [6, 8.4], [5, 10.1, 12], [5.3, '10.2', 15.8]], 5)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[2.7, 4], [], [10.1, '12'], [5.3, '10.2', 15.8]], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2.7, 4], (2, 5, 6, 7), [10.1, '12'], [5.3, '10.2', 15.8]], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
